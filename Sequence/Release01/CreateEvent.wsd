@startuml CreateEvent

skinparam Monochrome true
skinparam Shadowing false
hide footbox

actor Admin
participant "Page: Add Event" as AddEventPage
participant "Container: Add Event Form" as AddEventFormContainer
participant "Component: Event Form" as EventForm
participant "Service: Event Service" as FEEventService
participant "Router" as Router
participant "Event: HTTP Transport" as EventHTTPTransport
participant "Event: Endpoint" as EventEndpoint
participant "Event: Service" as EventService
participant "Event: Command" as EventCommand
participant "Event: Query" as EventQuery
participant "Storage: GRPC Transport" as StorageGRPCTransport
participant "Class: Service" as ClassService
participant "Poster: Service" as PosterService

Admin->AddEventPage: Open "Add Event" Page
AddEventPage->AddEventFormContainer: Render "Add Event Form" Container
AddEventFormContainer->EventForm: Render "Event Form"
EventForm-->AddEventFormContainer: rendered
AddEventFormContainer-->AddEventPage: rendered
AddEventPage-->Admin: rendered

Admin->AddEventPage: Fill Form
AddEventPage->AddEventFormContainer: Fill Form
AddEventFormContainer->EventForm: Fill Form
EventForm-->AddEventFormContainer: form data
AddEventFormContainer-->AddEventPage: form data
AddEventPage-->Admin: form data

Admin->AddEventPage: Click "Create Event" Button
AddEventPage->AddEventFormContainer: handleEventFormSubmitted()
AddEventFormContainer->FEEventService: createEvent(payload)
FEEventService->Router: route("POST", "v2/event", formData)
Router->EventHTTPTransport: CreateEvent(EventService, []ServerOption)
EventHTTPTransport->EventEndpoint: Create(EventService)
EventEndpoint->EventService: Create(context, payload)
EventService->EventService: Validate()

alt "Data not valid"
    EventService-->EventEndpoint: UnprocessableEntity
    EventEndpoint-->EventHTTPTransport: UnprocessableEntity
    EventHTTPTransport-->Router: UnprocessableEntity
    Router-->FEEventService: UnprocessableEntity
    FEEventService-->AddEventFormContainer: UnprocessableEntity
    AddEventFormContainer-->AddEventPage: UnprocessableEntity
    AddEventPage-->Admin: UnprocessableEntity
else
    EventService->EventQuery: GetPureModel(context, []SliceConditions)
    EventQuery-->EventService: events

    alt "there's any event"
        EventService-->EventEndpoint: BadRequest
        EventEndpoint-->EventHTTPTransport: BadRequest
        EventHTTPTransport-->Router: BadRequest
        Router-->FEEventService: BadRequest
        FEEventService-->AddEventFormContainer: BadRequest
        AddEventFormContainer-->AddEventPage: BadRequest
        AddEventPage-->Admin: BadRequest
    else
        EventService->EventService: event := EventModel()
        EventService->EventCommand: Create(context, event)
        EventCommand-->EventService: uuid

        EventService->StorageGRPCTransport: Upload(ProtoBuffer)
        StorageGRPCTransport-->EventService: []url

        EventService->PosterService: Create(context, payload)
        PosterService-->EventService: isDeleted

        EventService->ClassService: CommitBooked(context, eventId)
        ClassService-->EventService: isCommitted

        EventService->EventQuery: Find(context, []SliceConditions)
        EventQuery-->EventService: event
        EventService-->EventEndpoint: event
        EventEndpoint->EventEndpoint: response := Response(event, nil)
        EventEndpoint-->EventHTTPTransport: response
        EventHTTPTransport-->Router: response
        Router-->FEEventService: response
        FEEventService-->AddEventFormContainer: response
        AddEventFormContainer-->AddEventPage: response
        AddEventPage-->Admin: response
    end
end

@enduml