@startuml GetProfile

skinparam Monochrome true
skinparam Shadowing false
hide footbox

actor Employee
participant "Page: Profile" as ProfilePage
participant "Container: Profile" as ProfileContainer
participant "Service: Auth Service" as FEAuthService
participant "Route" as Route
participant "Session: HTTP Transport" as SessionHTTPTransport
participant "Session: Endpoint" as SessionEndpoint
participant "Session: Service" as SessionService
participant "User: Query" as UserQuery

Employee->ProfilePage: Open "Profile" Page
ProfilePage->ProfileContainer: fetchLoggedAccount()
ProfileContainer->FEAuthService: loggedAccount()
FEAuthService->Route: route("POST", "v2/me")
Route->SessionHTTPTransport: Me(SessionService, []ServerOption)
SessionHTTPTransport->SessionEndpoint: Me(SessionService)
SessionEndpoint->SessionService: Me(context)
SessionService->UserQuery: Find(context, []SliceConditions)
UserQuery->SessionService: users
SessionService-->SessionEndpoint: user
SessionEndpoint->SessionEndpoint: response := Response(user, nil)
SessionEndpoint-->SessionHTTPTransport: response
SessionHTTPTransport-->Route: response
Route-->FEAuthService: response
FEAuthService-->ProfileContainer: response
ProfileContainer-->ProfilePage: response
ProfilePage-->Employee: response

@enduml