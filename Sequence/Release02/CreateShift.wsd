@startuml CreateShift

skinparam Monochrome true
skinparam Shadowing false
hide footbox

actor Admin
participant "Page: Add Shift" as AddShiftPage
participant "Container: Add Shift Form" as AddShiftFormContainer
participant "Component: Shift Form" as ShiftForm
participant "Router" as Router
participant "Shift: HTTP Transport" as ShiftHTTPTransport
participant "Shift: Endpoint" as ShiftEndpoint
participant "Shift: Service" as ShiftService
participant "Shift: Command" as ShiftCommand
participant "Shift: Query" as ShiftQuery

activate Admin

Admin->AddShiftPage: Open "Add Shift" Page
activate AddShiftPage
AddShiftPage->AddShiftFormContainer: Render "Add Shift Form" Container
activate AddShiftFormContainer
AddShiftFormContainer->ShiftForm: Render "Shift Form"
activate ShiftForm
ShiftForm-->AddShiftFormContainer
AddShiftFormContainer-->AddShiftPage
AddShiftPage-->Admin

Admin->AddShiftPage: Fill Form
AddShiftPage->AddShiftFormContainer: Fill Form
AddShiftFormContainer->ShiftForm: Fill Form
ShiftForm-->AddShiftFormContainer: form data
deactivate ShiftForm
AddShiftFormContainer-->AddShiftPage: form data
AddShiftPage-->Admin: form data

Admin->AddShiftPage: Click "Create Shift" Button
AddShiftPage->AddShiftFormContainer: Click "Create Shift" Button
AddShiftFormContainer->Router: route("POST", "v2/shift", formData)
activate Router
Router->ShiftHTTPTransport: CreateShift(ShiftService, []ServerOption)
activate ShiftHTTPTransport
ShiftHTTPTransport->ShiftEndpoint: Create(ShiftService)
activate ShiftEndpoint
ShiftEndpoint->ShiftService: Create(payload)
activate ShiftService
ShiftService->ShiftService: Validate()

alt "Data not valid"
    ShiftService-->ShiftEndpoint: UnprocessableEntity
    ShiftEndpoint-->ShiftHTTPTransport: UnprocessableEntity
    ShiftHTTPTransport-->Router: UnprocessableEntity
    Router-->AddShiftFormContainer: UnprocessableEntity
    AddShiftFormContainer-->AddShiftPage: UnprocessableEntity
    AddShiftPage-->Admin: UnprocessableEntity
else
    ShiftService->ShiftService: shift := ShiftModel()
    ShiftService->ShiftCommand: Create(shift)
    activate ShiftCommand
    ShiftCommand-->ShiftService: uuid
    deactivate ShiftCommand
    ShiftService->ShiftQuery: Find(uuid)
    activate ShiftQuery
    ShiftQuery-->ShiftService: shift
    deactivate ShiftQuery
    ShiftService-->ShiftEndpoint: shift
    deactivate ShiftService
    ShiftEndpoint->ShiftEndpoint: response := Response(shift, nil)
    ShiftEndpoint-->ShiftHTTPTransport: response
    deactivate ShiftEndpoint
    ShiftHTTPTransport-->Router: response
    deactivate ShiftHTTPTransport
    Router-->AddShiftFormContainer: response
    deactivate Router
    AddShiftFormContainer-->AddShiftPage: response
    deactivate AddShiftFormContainer
    AddShiftPage-->Admin: response
    deactivate AddShiftPage
end

deactivate Admin

@enduml