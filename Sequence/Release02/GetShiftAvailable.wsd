@startuml GetShiftAvailable

skinparam Monochrome true
skinparam Shadowing false
hide footbox

actor Admin
participant "Component: Class Form" as ClassForm
participant "Service: Shift Service" as FEShiftService
participant "Router" as Router
participant "Shift: HTTP Transport" as ShiftHTTPTransport
participant "Shift: Endpoint" as ShiftEndpoint
participant "Shift: Service" as ShiftService
participant "Shift: Query" as ShiftQuery

Admin->ClassForm: Choose Date 
ClassForm->ClassForm: fetchAvailableShifts(date)
ClassForm->FEShiftService: fetchAvailableShifts(date)
FEShiftService->Router: route("GET", "v2/shift/available?date=YOUR_DATE")
Router->ShiftHTTPTransport: FindAvailableShift(ShiftService, []ServerOption)
ShiftHTTPTransport->ShiftEndpoint: FindAvailableShift(ShiftService)
ShiftEndpoint->ShiftService: Available(context, params)

ShiftService->ShiftQuery: Available(context, date)
ShiftQuery-->ShiftService: shifts
ShiftService-->ShiftEndpoint: shifts

ShiftEndpoint->ShiftEndpoint: response := Response(shifts, nil)
ShiftEndpoint-->ShiftHTTPTransport: response
ShiftHTTPTransport-->Router: response
Router-->FEShiftService: response
FEShiftService-->ClassForm: response
ClassForm-->Admin: rendered

@enduml