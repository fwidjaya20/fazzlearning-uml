@startuml CancelRequestClass

skinparam Monochrome true
skinparam Shadowing false
hide footbox

actor Member
participant "Page: Ticket Detail" as TicketPage
participant "Container: Ticket Detail Container" as TicketDetailContainer
participant "Service: Class Service" as FEClassService
participant "Router" as Router
participant "Ticket: HTTP Transport" as TicketHTTPTransport
participant "Ticket: Endpoint" as TicketEndpoint
participant "Ticket: Service" as TicketService
participant "Ticket: Command" as TicketCommand
participant "Ticket: Query" as TicketQuery

Member->TicketPage: Click "Cancel Request" Button
TicketPage->TicketDetailContainer: showCancelRegistrationConfirmation()

alt "Decline Cancel Register"
    TicketDetailContainer-->TicketPage: close dialog
    TicketPage-->Member: close dialog
else
    TicketDetailContainer->TicketDetailContainer: handleCancelation()
    TicketDetailContainer->FEClassService: unregisterClass(classId)
    FEClassService->Router: route("DELETE", "v2/class/{class_id}/unregister")
    Router->TicketHTTPTransport: Unregister(RequesterService, []ServerOption)
    TicketHTTPTransport->TicketEndpoint: Unregister(RequesterService)
    TicketEndpoint->TicketService: Unregister(context, payload)
    TicketService->TicketService: Validate()
    
    alt "Data Not Valid"
        TicketService-->TicketEndpoint: UnprocessableEntity
        TicketEndpoint-->TicketHTTPTransport: UnprocessableEntity
        TicketHTTPTransport-->Router: UnprocessableEntity
        Router-->FEClassService: UnprocessableEntity
        FEClassService-->TicketDetailContainer: UnprocessableEntity
        TicketDetailContainer-->TicketPage: UnprocessableEntity
        TicketPage-->Member: UnprocessableEntity
    else
        TicketService->TicketQuery: GetPureModel(context, []SliceCondition)
        TicketQuery-->TicketService: ticket
        TicketService->TicketCommand: Delete(context, ticket)
        TicketCommand-->TicketService: Is Deleted
        TicketService-->TicketEndpoint: response
        TicketEndpoint->TicketEndpoint: response := Response(IsDeleted, nil)
        TicketEndpoint-->TicketHTTPTransport: response
        TicketHTTPTransport-->Router: response
        Router-->FEClassService: response
        FEClassService-->TicketDetailContainer: response
        TicketDetailContainer-->TicketPage: response
        TicketPage-->Member: response
    end
end

@enduml