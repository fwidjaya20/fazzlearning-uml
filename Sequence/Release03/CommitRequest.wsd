@startuml CommitRequest

skinparam Monochrome true
skinparam Shadowing false
hide footbox

actor Admin
participant "Page: Detail Class" as DetailClassPage
participant "Container: List Requestor Container" as ListRequestorContainer
participant "Service: Requestor Service" as FERequestorService
participant "Router" as Router
participant "Requester: HTTP Transport" as RequestHTTPTransport
participant "Requester: Endpoint" as RequestEndpoint
participant "Requester: Service" as RequestService
participant "Requester: Query" as RequestQuery
participant "Requester: Command" as RequestCommand

Admin->DetailClassPage: Change "Requester" Status
DetailClassPage->ListRequestorContainer: handleResponseChange(id, value)
ListRequestorContainer-->DetailClassPage: changed
DetailClassPage-->Admin: changed

Admin->DetailClassPage: Click "Submit" Button
DetailClassPage->ListRequestorContainer: handleResponseSubmit()
ListRequestorContainer->FERequestorService: commitRequestor(classId, []payload)
FERequestorService->Router: route("PATCH", "v2/class/{class_id}/requester/commit")
Router->RequestHTTPTransport: CommitStatus(RequestService, []ServerOption)
RequestHTTPTransport->RequestEndpoint: Commit(RequestService)
RequestEndpoint->RequestService: CommitRequest(context, payload)

loop "For each Requester"
    RequestService->RequestService: Validate()
    
    alt "Data Not Valid"
        RequestService-->RequestEndpoint: UnprocessableEntity
        RequestEndpoint-->RequestHTTPTransport: UnprocessableEntity
        RequestHTTPTransport-->Router: UnprocessableEntity
        Router-->FERequestorService: UnprocessableEntity
        FERequestorService-->ListRequestorContainer: UnprocessableEntity
        ListRequestorContainer-->DetailClassPage: UnprocessableEntity
        DetailClassPage-->Admin: UnprocessableEntity
    else
        RequestService->RequestQuery: GetPureModel(context, []SliceCondition)
        RequestQuery-->RequestService: requester

        RequestService->RequestCommand: CommitStatus(context, requester)
        RequestCommand-->RequestService: is commited
    end
end

RequestEndpoint->RequestEndpoint: response := Response(isCommited)
RequestEndpoint-->RequestHTTPTransport: response
RequestHTTPTransport-->Router: response
Router-->FERequestorService: response
FERequestorService-->ListRequestorContainer: response
ListRequestorContainer-->DetailClassPage: response
DetailClassPage-->Admin: response

@enduml