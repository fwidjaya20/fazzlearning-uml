@startuml DeleteConversation

skinparam Monochrome true
skinparam Shadowing false
hide footbox

actor "Admin, Member" as Actor
participant "Page: Event Detail" as EventDetailPage
participant "Container: Conversation" as ConversationContainer
participant "Component: Conversation Item" as ConversationItem
participant "Router" as Router
participant "Conversation: HTTP Transport" as ConversationHTTPTransport
participant "Conversation: Endpoint" as ConversationEndpoint
participant "Conversation: Service" as ConversationService
participant "Conversation: Command" as ConversationCommand
participant "Conversation: Query" as ConversationQuery

activate Actor

Actor->EventDetailPage: Open "Event Detail" Page
activate EventDetailPage
EventDetailPage->ConversationContainer: Render "Conversation" Container
activate ConversationContainer
ConversationContainer->ConversationItem: Render "Conversation" Item
activate ConversationItem
ConversationItem-->ConversationContainer: rendered
ConversationContainer->Router: route("GET", "v2/event/{event_id}/comments")
activate Router
Router->ConversationHTTPTransport: FetchCommentsByEventId(ConversationService, []ServerOption)
activate ConversationHTTPTransport
ConversationHTTPTransport->ConversationEndpoint: FindCommentsByEventId(ConversationService)
activate ConversationEndpoint
ConversationEndpoint->ConversationService: FindCommentsByEvent(params)

activate ConversationService
ConversationService->ConversationQuery: FindComments([]SliceConditions)
activate ConversationQuery
ConversationQuery-->ConversationService: conversation
deactivate ConversationQuery
ConversationService-->ConversationEndpoint: conversation
deactivate ConversationService

ConversationEndpoint->ConversationEndpoint: response := Response(conversation, paginateMetadata)
ConversationEndpoint-->ConversationHTTPTransport: response
deactivate ConversationEndpoint
ConversationHTTPTransport-->Router: response
deactivate ConversationHTTPTransport
Router-->ConversationContainer: response
deactivate Router
ConversationContainer->ConversationItem: Render "Comment"
ConversationItem-->ConversationContainer: rendered
ConversationContainer-->EventDetailPage: rendered
EventDetailPage-->Actor: rendered

Actor->EventDetailPage: Click "Delete" Button
EventDetailPage->ConversationContainer: Click "Delete" Button
ConversationContainer->ConversationItem: Click "Delete" Button
ConversationItem-->ConversationContainer
ConversationContainer->ConversationContainer: Show Dialod Confirmation

alt "Cancel Delete"
    ConversationContainer-->EventDetailPage
    EventDetailPage-->Actor
else
    ConversationContainer->Router: route("DELETE", "v2/event{event_id}/comment/{comment_id}", formData)
    activate Router
    Router->ConversationHTTPTransport: DeleteComment(ConversationService, []ServerOption)
    activate ConversationHTTPTransport
    ConversationHTTPTransport->ConversationEndpoint: DeleteComment(ConversationService)
    activate ConversationEndpoint
    ConversationEndpoint->ConversationService: DeleteComment(payload)

    activate ConversationService
    ConversationService->ConversationService: Validate()

    alt "Data Valid"
        ConversationService-->ConversationEndpoint: BadRequest
        ConversationEndpoint-->ConversationHTTPTransport: BadRequest
        ConversationHTTPTransport-->Router: BadRequest
        Router-->ConversationContainer: BadRequest
        ConversationContainer-->EventDetailPage: BadRequest
        EventDetailPage-->Actor: BadRequest
    else
        ConversationService->ConversationQuery: GetPureModel([]SliceConditions)
        activate ConversationQuery
        ConversationQuery-->ConversationService: conversation
        deactivate ConversationQuery

        ConversationService->ConversationCommand: Delete(conversation)
        activate ConversationCommand
        ConversationCommand-->ConversationService: isDeleted
        deactivate ConversationCommand
        deactivate ConversationService
        
        ConversationService-->ConversationEndpoint: isDeleted
        ConversationEndpoint->ConversationEndpoint: response := Response(isDeleted, nil)
        ConversationEndpoint-->ConversationHTTPTransport: response
        deactivate ConversationEndpoint
        ConversationHTTPTransport-->Router: response
        deactivate ConversationHTTPTransport
        Router-->ConversationContainer: response
        deactivate Router
        ConversationContainer-->EventDetailPage: response
        deactivate ConversationContainer
        EventDetailPage-->Actor: response
        deactivate EventDetailPage
    end
end

deactivate Actor

@enduml