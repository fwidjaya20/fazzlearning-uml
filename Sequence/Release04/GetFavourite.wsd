@startuml GetFavourite

skinparam Monochrome true
skinparam Shadowing false
hide footbox

actor Member
participant "Page: Favourite" as FavouritePage
participant "Container: Favourite List" as FavouriteListContainer
participant "Component: Class Card" as ClassCard
participant "Router" as Router
participant "Favourite: HTTP Transport" as FavouriteHTTPTransport
participant "Favourite: Endpoint" as FavouriteEndpoint
participant "Favourite: Service" as FavouriteService
participant "Favourite: Query" as FavouriteQuery

activate Member

Member->FavouritePage: Open "Favourite" Pages
activate FavouritePage
FavouritePage->FavouriteListContainer: render favourite list container
activate FavouriteListContainer
FavouriteListContainer->ClassCard: render favourite
activate ClassCard
ClassCard-->FavouriteListContainer: rendered
FavouriteListContainer->Router: router("GET", "v2/favourites")
activate Router
Router->FavouriteHTTPTransport: FetchUserFavourites(FavouriteService, []ServerOption)
activate FavouriteHTTPTransport
FavouriteHTTPTransport->FavouriteEndpoint: All(FavouriteService)
activate FavouriteEndpoint
FavouriteEndpoint->FavouriteService: All()
activate FavouriteService
FavouriteService->FavouriteQuery: All([]SliceCondition, email)
activate FavouriteQuery
FavouriteQuery-->FavouriteService: favourites
deactivate FavouriteQuery
FavouriteService-->FavouriteEndpoint: favourites
deactivate FavouriteService
FavouriteEndpoint->FavouriteEndpoint: response := Response(favourites, nil)
FavouriteEndpoint-->FavouriteHTTPTransport: response
deactivate FavouriteEndpoint
FavouriteHTTPTransport-->Router: response
deactivate FavouriteHTTPTransport
Router-->FavouriteListContainer: response
deactivate Router
FavouriteListContainer->ClassCard: render favourite
ClassCard-->FavouriteListContainer: rendered
deactivate ClassCard
FavouriteListContainer-->FavouritePage: rendered
deactivate FavouriteListContainer
FavouritePage-->Member
deactivate FavouritePage

deactivate Member

@enduml