@startuml GetNotification

skinparam Monochrome true
skinparam Shadowing false
hide footbox

actor Member
participant "Page: Notification" as NotificationPage
participant "Container: Notification" as NotificationContainer
participant "Service: Notification Service" as FENotificationService
participant "Router" as Router
participant "Notification: HTTP Transport" as NotificationHTTPTransport
participant "Notification: Endpoint" as NotificationEndpoint
participant "Notification: Service" as NotificationService
participant "Notification: Query" as NotificationQuery

Member->NotificationPage: Open "Notification" Pages
NotificationPage->NotificationContainer: fetchNotification()
NotificationContainer->FENotificationService: fetchNotification()
FENotificationService->Router: router("GET", "v2/notifications")
Router->NotificationHTTPTransport: All(NotificationService, []ServerOption)
NotificationHTTPTransport->NotificationEndpoint: All(NotificationService)
NotificationEndpoint->NotificationService: All(context)
NotificationService->NotificationQuery: Find(context, []SliceCondition)
NotificationQuery-->NotificationService: notifications
NotificationService-->NotificationEndpoint: notifications
NotificationEndpoint->NotificationEndpoint: response := Response(notifications, nil)
NotificationEndpoint-->NotificationHTTPTransport: response
NotificationHTTPTransport-->Router: response
Router-->FENotificationService: response
FENotificationService-->NotificationContainer: response
NotificationContainer-->NotificationPage: rendered
NotificationPage-->Member: rendered

@enduml