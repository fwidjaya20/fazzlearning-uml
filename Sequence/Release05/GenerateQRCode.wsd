@startuml GenerateQRCode

skinparam Monochrome true
skinparam Shadowing false
hide footbox

actor Admin
participant "Page: Detail Class" as DetailClassPage
participant "Container: Detail Class" as DetailClassContainer
participant "Service: Class Service" as FEClassService
participant "Router" as Router
participant "Class: HTTP Transport" as ClassHTTPTransport
participant "Class: Endpoint" as ClassEndpoint
participant "Class: Service" as ClassService
participant "Class: Query" as ClassQuery
participant "Library: QRCode" as QRCode

Admin->DetailClassPage: Open "Detail Class" Page
DetailClassPage->DetailClassContainer: generateQRCode()
DetailClassContainer->FEClassService: generateQRCode(classId)
FEClassService->Router: route("GET", "v2/class/{class_id}/qrcode")
Router->ClassHTTPTransport: QRCode(ClassService, []ServerOption)
ClassHTTPTransport->ClassEndpoint: QRCode(ClassService)
ClassEndpoint->ClassService: QRCode(context, ClassService, classId)
ClassService->ClassQuery: GetPureModel(context, []SliceCondition)
ClassQuery-->ClassService: class
ClassService->QRCode: PNG()
QRCode-->ClassService: qrCode
ClassService-->ClassEndpoint: qrCode
ClassEndpoint->ClassEndpoint: response := Response(qrCode, nil)
ClassEndpoint-->ClassHTTPTransport: response
ClassHTTPTransport-->Router: response
Router-->FEClassService: response
FEClassService-->DetailClassContainer: response
DetailClassContainer-->DetailClassPage: response
DetailClassPage->DetailClassPage: display QR Code
DetailClassPage-->Admin: display QR Code

@enduml